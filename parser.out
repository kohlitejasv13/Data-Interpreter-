Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> expression
Rule 1     expression -> expression PLUS expression
Rule 2     expression -> expression MINUS expression
Rule 3     expression -> expression MUL expression
Rule 4     expression -> expression DIV expression
Rule 5     expression -> NUMBER
Rule 6     expression -> LPAREN expression RPAREN
Rule 7     expression -> MINUS expression

Terminals, with rules where they appear

DIV                  : 4
LPAREN               : 6
MINUS                : 2 7
MUL                  : 3
NUMBER               : 5
PLUS                 : 1
RPAREN               : 6
error                : 

Nonterminals, with rules where they appear

expression           : 1 1 2 2 3 3 4 4 6 7 0

Parsing method: LALR

state 0

    (0) S' -> . expression
    (1) expression -> . expression PLUS expression
    (2) expression -> . expression MINUS expression
    (3) expression -> . expression MUL expression
    (4) expression -> . expression DIV expression
    (5) expression -> . NUMBER
    (6) expression -> . LPAREN expression RPAREN
    (7) expression -> . MINUS expression

    NUMBER          shift and go to state 3
    LPAREN          shift and go to state 4
    MINUS           shift and go to state 2

    expression                     shift and go to state 1

state 1

    (0) S' -> expression .
    (1) expression -> expression . PLUS expression
    (2) expression -> expression . MINUS expression
    (3) expression -> expression . MUL expression
    (4) expression -> expression . DIV expression

    PLUS            shift and go to state 5
    MINUS           shift and go to state 6
    MUL             shift and go to state 7
    DIV             shift and go to state 8


state 2

    (7) expression -> MINUS . expression
    (1) expression -> . expression PLUS expression
    (2) expression -> . expression MINUS expression
    (3) expression -> . expression MUL expression
    (4) expression -> . expression DIV expression
    (5) expression -> . NUMBER
    (6) expression -> . LPAREN expression RPAREN
    (7) expression -> . MINUS expression

    NUMBER          shift and go to state 3
    LPAREN          shift and go to state 4
    MINUS           shift and go to state 2

    expression                     shift and go to state 9

state 3

    (5) expression -> NUMBER .

    PLUS            reduce using rule 5 (expression -> NUMBER .)
    MINUS           reduce using rule 5 (expression -> NUMBER .)
    MUL             reduce using rule 5 (expression -> NUMBER .)
    DIV             reduce using rule 5 (expression -> NUMBER .)
    $end            reduce using rule 5 (expression -> NUMBER .)
    RPAREN          reduce using rule 5 (expression -> NUMBER .)


state 4

    (6) expression -> LPAREN . expression RPAREN
    (1) expression -> . expression PLUS expression
    (2) expression -> . expression MINUS expression
    (3) expression -> . expression MUL expression
    (4) expression -> . expression DIV expression
    (5) expression -> . NUMBER
    (6) expression -> . LPAREN expression RPAREN
    (7) expression -> . MINUS expression

    NUMBER          shift and go to state 3
    LPAREN          shift and go to state 4
    MINUS           shift and go to state 2

    expression                     shift and go to state 10

state 5

    (1) expression -> expression PLUS . expression
    (1) expression -> . expression PLUS expression
    (2) expression -> . expression MINUS expression
    (3) expression -> . expression MUL expression
    (4) expression -> . expression DIV expression
    (5) expression -> . NUMBER
    (6) expression -> . LPAREN expression RPAREN
    (7) expression -> . MINUS expression

    NUMBER          shift and go to state 3
    LPAREN          shift and go to state 4
    MINUS           shift and go to state 2

    expression                     shift and go to state 11

state 6

    (2) expression -> expression MINUS . expression
    (1) expression -> . expression PLUS expression
    (2) expression -> . expression MINUS expression
    (3) expression -> . expression MUL expression
    (4) expression -> . expression DIV expression
    (5) expression -> . NUMBER
    (6) expression -> . LPAREN expression RPAREN
    (7) expression -> . MINUS expression

    NUMBER          shift and go to state 3
    LPAREN          shift and go to state 4
    MINUS           shift and go to state 2

    expression                     shift and go to state 12

state 7

    (3) expression -> expression MUL . expression
    (1) expression -> . expression PLUS expression
    (2) expression -> . expression MINUS expression
    (3) expression -> . expression MUL expression
    (4) expression -> . expression DIV expression
    (5) expression -> . NUMBER
    (6) expression -> . LPAREN expression RPAREN
    (7) expression -> . MINUS expression

    NUMBER          shift and go to state 3
    LPAREN          shift and go to state 4
    MINUS           shift and go to state 2

    expression                     shift and go to state 13

state 8

    (4) expression -> expression DIV . expression
    (1) expression -> . expression PLUS expression
    (2) expression -> . expression MINUS expression
    (3) expression -> . expression MUL expression
    (4) expression -> . expression DIV expression
    (5) expression -> . NUMBER
    (6) expression -> . LPAREN expression RPAREN
    (7) expression -> . MINUS expression

    NUMBER          shift and go to state 3
    LPAREN          shift and go to state 4
    MINUS           shift and go to state 2

    expression                     shift and go to state 14

state 9

    (7) expression -> MINUS expression .
    (1) expression -> expression . PLUS expression
    (2) expression -> expression . MINUS expression
    (3) expression -> expression . MUL expression
    (4) expression -> expression . DIV expression

    PLUS            reduce using rule 7 (expression -> MINUS expression .)
    MINUS           reduce using rule 7 (expression -> MINUS expression .)
    MUL             reduce using rule 7 (expression -> MINUS expression .)
    DIV             reduce using rule 7 (expression -> MINUS expression .)
    $end            reduce using rule 7 (expression -> MINUS expression .)
    RPAREN          reduce using rule 7 (expression -> MINUS expression .)

  ! PLUS            [ shift and go to state 5 ]
  ! MINUS           [ shift and go to state 6 ]
  ! MUL             [ shift and go to state 7 ]
  ! DIV             [ shift and go to state 8 ]


state 10

    (6) expression -> LPAREN expression . RPAREN
    (1) expression -> expression . PLUS expression
    (2) expression -> expression . MINUS expression
    (3) expression -> expression . MUL expression
    (4) expression -> expression . DIV expression

    RPAREN          shift and go to state 15
    PLUS            shift and go to state 5
    MINUS           shift and go to state 6
    MUL             shift and go to state 7
    DIV             shift and go to state 8


state 11

    (1) expression -> expression PLUS expression .
    (1) expression -> expression . PLUS expression
    (2) expression -> expression . MINUS expression
    (3) expression -> expression . MUL expression
    (4) expression -> expression . DIV expression

    PLUS            reduce using rule 1 (expression -> expression PLUS expression .)
    MINUS           reduce using rule 1 (expression -> expression PLUS expression .)
    $end            reduce using rule 1 (expression -> expression PLUS expression .)
    RPAREN          reduce using rule 1 (expression -> expression PLUS expression .)
    MUL             shift and go to state 7
    DIV             shift and go to state 8

  ! MUL             [ reduce using rule 1 (expression -> expression PLUS expression .) ]
  ! DIV             [ reduce using rule 1 (expression -> expression PLUS expression .) ]
  ! PLUS            [ shift and go to state 5 ]
  ! MINUS           [ shift and go to state 6 ]


state 12

    (2) expression -> expression MINUS expression .
    (1) expression -> expression . PLUS expression
    (2) expression -> expression . MINUS expression
    (3) expression -> expression . MUL expression
    (4) expression -> expression . DIV expression

    PLUS            reduce using rule 2 (expression -> expression MINUS expression .)
    MINUS           reduce using rule 2 (expression -> expression MINUS expression .)
    $end            reduce using rule 2 (expression -> expression MINUS expression .)
    RPAREN          reduce using rule 2 (expression -> expression MINUS expression .)
    MUL             shift and go to state 7
    DIV             shift and go to state 8

  ! MUL             [ reduce using rule 2 (expression -> expression MINUS expression .) ]
  ! DIV             [ reduce using rule 2 (expression -> expression MINUS expression .) ]
  ! PLUS            [ shift and go to state 5 ]
  ! MINUS           [ shift and go to state 6 ]


state 13

    (3) expression -> expression MUL expression .
    (1) expression -> expression . PLUS expression
    (2) expression -> expression . MINUS expression
    (3) expression -> expression . MUL expression
    (4) expression -> expression . DIV expression

    PLUS            reduce using rule 3 (expression -> expression MUL expression .)
    MINUS           reduce using rule 3 (expression -> expression MUL expression .)
    MUL             reduce using rule 3 (expression -> expression MUL expression .)
    DIV             reduce using rule 3 (expression -> expression MUL expression .)
    $end            reduce using rule 3 (expression -> expression MUL expression .)
    RPAREN          reduce using rule 3 (expression -> expression MUL expression .)

  ! PLUS            [ shift and go to state 5 ]
  ! MINUS           [ shift and go to state 6 ]
  ! MUL             [ shift and go to state 7 ]
  ! DIV             [ shift and go to state 8 ]


state 14

    (4) expression -> expression DIV expression .
    (1) expression -> expression . PLUS expression
    (2) expression -> expression . MINUS expression
    (3) expression -> expression . MUL expression
    (4) expression -> expression . DIV expression

    PLUS            reduce using rule 4 (expression -> expression DIV expression .)
    MINUS           reduce using rule 4 (expression -> expression DIV expression .)
    MUL             reduce using rule 4 (expression -> expression DIV expression .)
    DIV             reduce using rule 4 (expression -> expression DIV expression .)
    $end            reduce using rule 4 (expression -> expression DIV expression .)
    RPAREN          reduce using rule 4 (expression -> expression DIV expression .)

  ! PLUS            [ shift and go to state 5 ]
  ! MINUS           [ shift and go to state 6 ]
  ! MUL             [ shift and go to state 7 ]
  ! DIV             [ shift and go to state 8 ]


state 15

    (6) expression -> LPAREN expression RPAREN .

    PLUS            reduce using rule 6 (expression -> LPAREN expression RPAREN .)
    MINUS           reduce using rule 6 (expression -> LPAREN expression RPAREN .)
    MUL             reduce using rule 6 (expression -> LPAREN expression RPAREN .)
    DIV             reduce using rule 6 (expression -> LPAREN expression RPAREN .)
    $end            reduce using rule 6 (expression -> LPAREN expression RPAREN .)
    RPAREN          reduce using rule 6 (expression -> LPAREN expression RPAREN .)


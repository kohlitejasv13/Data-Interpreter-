
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftPLUSMINUSleftMULDIVrightUMINUSDIV LPAREN MINUS MUL NUMBER PLUS RPARENexpression : expression PLUS expression\n                  | expression MINUS expression\n                  | expression MUL expression\n                  | expression DIV expressionexpression : NUMBERexpression : LPAREN expression RPARENexpression : MINUS expression %prec UMINUS'
    
_lr_action_items = {'NUMBER':([0,2,4,5,6,7,8,],[3,3,3,3,3,3,3,]),'LPAREN':([0,2,4,5,6,7,8,],[4,4,4,4,4,4,4,]),'MINUS':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,],[2,6,2,-5,2,2,2,2,2,-7,6,-1,-2,-3,-4,-6,]),'$end':([1,3,9,11,12,13,14,15,],[0,-5,-7,-1,-2,-3,-4,-6,]),'PLUS':([1,3,9,10,11,12,13,14,15,],[5,-5,-7,5,-1,-2,-3,-4,-6,]),'MUL':([1,3,9,10,11,12,13,14,15,],[7,-5,-7,7,7,7,-3,-4,-6,]),'DIV':([1,3,9,10,11,12,13,14,15,],[8,-5,-7,8,8,8,-3,-4,-6,]),'RPAREN':([3,9,10,11,12,13,14,15,],[-5,-7,15,-1,-2,-3,-4,-6,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'expression':([0,2,4,5,6,7,8,],[1,9,10,11,12,13,14,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> expression","S'",1,None,None,None),
  ('expression -> expression PLUS expression','expression',3,'p_expression_binop','parser.py',28),
  ('expression -> expression MINUS expression','expression',3,'p_expression_binop','parser.py',29),
  ('expression -> expression MUL expression','expression',3,'p_expression_binop','parser.py',30),
  ('expression -> expression DIV expression','expression',3,'p_expression_binop','parser.py',31),
  ('expression -> NUMBER','expression',1,'p_expression_number','parser.py',35),
  ('expression -> LPAREN expression RPAREN','expression',3,'p_expression_group','parser.py',39),
  ('expression -> MINUS expression','expression',2,'p_expression_uminus','parser.py',43),
]
